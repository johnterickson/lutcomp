v2.0 raw
#  line: '#!image_base_address=(00080400)'
#   comment: '#!image_base_address=(00080400)'
#  line: 'loadimm8 r00 <- $01'
#   instruction: 'loadimm8 r00 <- $01'
#    loadimm8: 'loadimm8 r00 <- $01'
#     register: 'r00'
#      unsigned_hex_constant: '00'
#     constant8: '$01'
#      signed_hex_constant: '01'
#       unsigned_hex_constant: '01'
#  line: 'and8 r00 r00 -> r00'
#   instruction: 'and8 r00 r00 -> r00'
#    and8: 'and8 r00 r00 -> r00'
#     register: 'r00'
#      unsigned_hex_constant: '00'
#     register: 'r00'
#      unsigned_hex_constant: '00'
#     register: 'r00'
#      unsigned_hex_constant: '00'
#  line: 'loadimm8 r01 <- 'H''
#   instruction: 'loadimm8 r01 <- 'H''
#    loadimm8: 'loadimm8 r01 <- 'H''
#     register: 'r01'
#      unsigned_hex_constant: '01'
#     constant8: ''H''
#      char_constant: ''H''
#  line: 'ttyout r01'
#   instruction: 'ttyout r01'
#    ttyout: 'ttyout r01'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#  line: 'loadimm8 r01 <- 'i''
#   instruction: 'loadimm8 r01 <- 'i''
#    loadimm8: 'loadimm8 r01 <- 'i''
#     register: 'r01'
#      unsigned_hex_constant: '01'
#     constant8: ''i''
#      char_constant: ''i''
#  line: 'ttyout r01'
#   instruction: 'ttyout r01'
#    ttyout: 'ttyout r01'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#  line: 'loadimm8 r01 <- '!''
#   instruction: 'loadimm8 r01 <- '!''
#    loadimm8: 'loadimm8 r01 <- '!''
#     register: 'r01'
#      unsigned_hex_constant: '01'
#     constant8: ''!''
#      char_constant: ''!''
#  line: 'ttyout r01'
#   instruction: 'ttyout r01'
#    ttyout: 'ttyout r01'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#  line: 'loadimm8 r01 <- $0A'
#   instruction: 'loadimm8 r01 <- $0A'
#    loadimm8: 'loadimm8 r01 <- $0A'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#     constant8: '$0A'
#      signed_hex_constant: '0A'
#       unsigned_hex_constant: '0A'
#  line: 'ttyout r01'
#   instruction: 'ttyout r01'
#    ttyout: 'ttyout r01'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#  line: ':prompt'
#   label: ':prompt'
#  line: 'loadimm8 r01 <- '>''
#   instruction: 'loadimm8 r01 <- '>''
#    loadimm8: 'loadimm8 r01 <- '>''
#     register: 'r01'
#      unsigned_hex_constant: '01'
#     constant8: ''>''
#      char_constant: ''>''
#  line: 'ttyout r01'
#   instruction: 'ttyout r01'
#    ttyout: 'ttyout r01'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#  line: 'loadimm8 r01 <- ':''
#   instruction: 'loadimm8 r01 <- ':''
#    loadimm8: 'loadimm8 r01 <- ':''
#     register: 'r01'
#      unsigned_hex_constant: '01'
#     constant8: '':''
#      char_constant: '':''
#  line: 'ttyout r01'
#   instruction: 'ttyout r01'
#    ttyout: 'ttyout r01'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#  line: ':read'
#   label: ':read'
#  line: 'io_ready_to_read r02'
#   instruction: 'io_ready_to_read r02'
#    io_ready_to_read: 'io_ready_to_read r02'
#     register: 'r02'
#      unsigned_hex_constant: '02'
#  line: 'andimm8 r02 <- $01'
#   instruction: 'andimm8 r02 <- $01'
#    andimm8: 'andimm8 r02 <- $01'
#     register: 'r02'
#      unsigned_hex_constant: '02'
#     constant8: '$01'
#      signed_hex_constant: '01'
#       unsigned_hex_constant: '01'
#  line: 'jzimm :read'
#   instruction: 'jzimm :read'
#    jzimm: 'jzimm :read'
#     constant24: ':read'
#      label: ':read'
#  line: 'ttyin r01'
#   instruction: 'ttyin r01'
#    ttyin: 'ttyin r01'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#  line: 'ttyout r01'
#   instruction: 'ttyout r01'
#    ttyout: 'ttyout r01'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#  line: 'and8 r01 r01 -> r02'
#   instruction: 'and8 r01 r01 -> r02'
#    and8: 'and8 r01 r01 -> r02'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#     register: 'r02'
#      unsigned_hex_constant: '02'
#  line: 'xorimm8 r02 <- 'q''
#   instruction: 'xorimm8 r02 <- 'q''
#    xorimm8: 'xorimm8 r02 <- 'q''
#     register: 'r02'
#      unsigned_hex_constant: '02'
#     constant8: ''q''
#      char_constant: ''q''
#  line: 'jzimm :halt'
#   instruction: 'jzimm :halt'
#    jzimm: 'jzimm :halt'
#     constant24: ':halt'
#      label: ':halt'
#  line: 'and8 r01 r01 -> r02'
#   instruction: 'and8 r01 r01 -> r02'
#    and8: 'and8 r01 r01 -> r02'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#     register: 'r01'
#      unsigned_hex_constant: '01'
#     register: 'r02'
#      unsigned_hex_constant: '02'
#  line: 'xorimm8 r02 <- $0A'
#   instruction: 'xorimm8 r02 <- $0A'
#    xorimm8: 'xorimm8 r02 <- $0A'
#     register: 'r02'
#      unsigned_hex_constant: '02'
#     constant8: '$0A'
#      signed_hex_constant: '0A'
#       unsigned_hex_constant: '0A'
#  line: 'jzimm :prompt'
#   instruction: 'jzimm :prompt'
#    jzimm: 'jzimm :prompt'
#     constant24: ':prompt'
#      label: ':prompt'
#  line: 'jmpimm :read'
#   instruction: 'jmpimm :read'
#    jmpimm: 'jmpimm :read'
#     constant24: ':read'
#      label: ':read'
#  line: ':halt'
#   label: ':halt'
#  line: 'halt $00000000'
#   instruction: 'halt $00000000'
#    halt: 'halt $00000000'
#     constant32: '$00000000'
#      signed_hex_constant: '00000000'
#       unsigned_hex_constant: '00000000'
#  EOI: ''
# #!image_base_address=(00080400)
# 00000 LoadImm8 [Register(0x00), Constant8(0x01=1)]
#       loadimm8 r00 <- $01
04 00 01 

# 00003 And8 [Register(0x00), Register(0x00), Register(0x00)]
#       and8 r00 r00 -> r00
1b 00 00 00 

# 00007 LoadImm8 [Register(0x01), Constant8(0x48=72)]
#       loadimm8 r01 <- 'H'
04 01 48 

# 0000a Out0 [Register(0x01)]
#       ttyout r01
68 01 

# 0000c LoadImm8 [Register(0x01), Constant8(0x69=105)]
#       loadimm8 r01 <- 'i'
04 01 69 

# 0000f Out0 [Register(0x01)]
#       ttyout r01
68 01 

# 00011 LoadImm8 [Register(0x01), Constant8(0x21=33)]
#       loadimm8 r01 <- '!'
04 01 21 

# 00014 Out0 [Register(0x01)]
#       ttyout r01
68 01 

# 00016 LoadImm8 [Register(0x01), Constant8(0x0a=10)]
#       loadimm8 r01 <- $0A
04 01 0a 

# 00019 Out0 [Register(0x01)]
#       ttyout r01
68 01 

# :prompt
# 0001b LoadImm8 [Register(0x01), Constant8(0x3e=62)]
#       loadimm8 r01 <- '>'
04 01 3e 

# 0001e Out0 [Register(0x01)]
#       ttyout r01
68 01 

# 00020 LoadImm8 [Register(0x01), Constant8(0x3a=58)]
#       loadimm8 r01 <- ':'
04 01 3a 

# 00023 Out0 [Register(0x01)]
#       ttyout r01
68 01 

# :read
# 00025 IoReadyToRead [Register(0x02)]
#       io_ready_to_read r02
79 02 

# 00027 AndImm8 [Register(0x02), Constant8(0x01=1)]
#       andimm8 r02 <- $01
18 02 01 

# 0002a JzImm [Label24(:read)]
#       jzimm :read
72 25 00 00 

# 0002e In0 [Register(0x01)]
#       ttyin r01
60 01 

# 00030 Out0 [Register(0x01)]
#       ttyout r01
68 01 

# 00032 And8 [Register(0x01), Register(0x01), Register(0x02)]
#       and8 r01 r01 -> r02
1b 01 01 02 

# 00036 XorImm8 [Register(0x02), Constant8(0x71=113)]
#       xorimm8 r02 <- 'q'
1a 02 71 

# 00039 JzImm [Label24(:halt)]
#       jzimm :halt
72 4c 00 00 

# 0003d And8 [Register(0x01), Register(0x01), Register(0x02)]
#       and8 r01 r01 -> r02
1b 01 01 02 

# 00041 XorImm8 [Register(0x02), Constant8(0x0a=10)]
#       xorimm8 r02 <- $0A
1a 02 0a 

# 00044 JzImm [Label24(:prompt)]
#       jzimm :prompt
72 1b 00 00 

# 00048 JmpImm [Label24(:read)]
#       jmpimm :read
70 25 00 00 

# :halt
# 0004c Halt [Constant32(0x00000000=0)]
#       halt $00000000
7e 00 00 00 00 

