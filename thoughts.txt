LUT-ALU computer (e.g. 32-bit = K=8, word=4 bit)


/*

i i o o c c c c x x x x x x x x

i i 0 0 LOAD
i i 0 1 LOADHI
i == 0
 0 0 0 o x x x x LOAD_IMM
 0 0 1 o x x x x LOADHI_IMM
else 
 i i o o 0 0 0 0 SIGNEXT
 i i o o 0 0 0 1 ORHI
 i i o o 0 0 0 2 COPY

 0 0 c c x x x x LOAD_IMM ACC/ADDR
 0 0 c c x x x x LOADHI_IMM ACC/ADDR
 i i o o c c c c

 0-3 imm | in/out flags
 4-7 opcode

instruction
 0-3 imm | in/out flags
 4-5 opcode
 6-7 in_flags

LUT inputs
 0-7 ACC
 8-15 [input2]
 16-20 opcode

LUT output
 0-7 OUT

OUT_FLAGS:
0 carry
7 HALT

*/


A, B

ADDR

f f f f f i i i

Byte 1:
 Function select: 6 bits
 Input2 select: IMM, ADDR, PC, MEM
Byte 2:
 Depends on function select

LUT key:
0 0 0 0 
[function select 6 (4) bits] [ACC value] [8 bits selected by input2 select 2 bit]


LUT output
8x OUT

OUT_FLAGS:
0,1 target bits (ACC, ADDR, PC, MEM)
2 carry
7 HALT


LOADIMM x:
----------
0 0 0 0 0 0 "COPY"
ACC
0 0 IMM
x


COPY ACC, PC "JMP":

0 0 0 0 1 "COPY"
[8-bit ACC value]


OUT:[ACC] 
TARGET: 2



